const path = require('path');
const database = require(path.join(__dirname, '..', '..', 'database', 'database'));
const { isAdmin } = require(path.join(__dirname, '..', '..', 'utils', 'isAdmin'));
const logger = require(path.join(__dirname, '..', '..', 'utils', 'logger'));

function handleUserInfoCommand(bot, msg, match) {
    if (!isAdmin(msg.from.id)) {
        return bot.sendMessage(msg.chat.id, '‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!');
    }

    try {
        const userId = parseInt(match[1]);
        if (isNaN(userId)) {
            return bot.sendMessage(msg.chat.id, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /user_info [ID]');
        }

        // üî• –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ò–ó –ë–ê–ó–´
        const userChat = database.getUserChats().get(userId);
        const userSettings = database.getUserSettings().get(userId);
        const referralInfo = database.getReferralInfo(userId);
        const clickStats = database.getUserClickStats(userId);

        if (!userChat) {
            return bot.sendMessage(msg.chat.id, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ`);
        }

        // üî• –§–û–†–ú–ò–†–£–ï–ú –¢–û–ü –ö–ê–ó–ò–ù–û –î–õ–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò
        let topCasinosText = '';
        if (Object.keys(clickStats).length > 0) {
            const topCasinos = Object.entries(clickStats)
                .sort(([,a], [,b]) => b - a)
                .slice(0, 3)
                .map(([casinoId, clicks], index) => {
                    const casino = database.getCasino(parseInt(casinoId));
                    return `${index + 1}. ${casino ? casino.name : `–ö–∞–∑–∏–Ω–æ#${casinoId}`} - ${clicks} –∫–ª–∏–∫–æ–≤`;
                })
                .join('\n');
            
            topCasinosText = `\n–¢–æ–ø –∫–∞–∑–∏–Ω–æ:\n${topCasinos}`;
        }

        // üî• –§–û–†–ú–ò–†–£–ï–ú –ò–ù–§–û–†–ú–ê–¶–ò–Æ –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï
        const userInfo = `
üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:

üÜî ID: ${userChat.id}
üìõ –ò–º—è: ${userChat.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìõ –§–∞–º–∏–ª–∏—è: ${userChat.last_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üîó Username: @${userChat.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üåê –Ø–∑—ã–∫: ${userChat.language_code || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üìÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(userChat.joined_at).toLocaleString('ru-RU')}
‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${new Date(userChat.last_activity).toLocaleString('ru-RU')}

üé∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
${userSettings ? `
‚Ä¢ –°–∫—Ä—ã—Ç—ã—Ö –∫–∞–∑–∏–Ω–æ: ${userSettings.hiddenCasinos?.length || 0}
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${userSettings.notifications ? '‚úÖ' : '‚ùå'}
‚Ä¢ –¢–µ–º–∞: ${userSettings.theme === 'dark' ? 'üåô –¢—ë–º–Ω–∞—è' : '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è'}
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –ª–∞–π–≤—É: ${userSettings.hasLiveAccess ? '‚úÖ' : '‚ùå'}
` : '‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'}

üìä –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:
‚Ä¢ –ü—Ä–∏–≥–ª–∞—Å–∏–ª: ${referralInfo.referredBy ? `User#${referralInfo.referredBy}` : '–ù–∏–∫—Ç–æ'}
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ${referralInfo.referrals?.length || 0} —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${referralInfo.totalEarned || 0} –±–∞–ª–ª–æ–≤

üéØ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–∫–æ–≤:
‚Ä¢ –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: ${Object.values(clickStats).reduce((sum, clicks) => sum + clicks, 0)}
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞–∑–∏–Ω–æ: ${Object.keys(clickStats).length}
${topCasinosText}
        `.trim();

        bot.sendMessage(msg.chat.id, userInfo);

    } catch (error) {
        logger.error('Error in user info command:', error);
        bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
    }
}

// üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ö–û–ú–ê–ù–î–ê –î–õ–Ø –ü–û–ò–°–ö–ê –ü–û USERNAME
function handleFindUserCommand(bot, msg, match) {
    if (!isAdmin(msg.from.id)) {
        return bot.sendMessage(msg.chat.id, '‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!');
    }

    try {
        const searchUsername = match[1].toLowerCase().replace('@', '');
        if (!searchUsername) {
            return bot.sendMessage(msg.chat.id, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –¥–ª—è –ø–æ–∏—Å–∫–∞');
        }

        const userChats = database.getUserChats();
        const foundUsers = [];

        // üî• –ü–û–ò–°–ö –ü–û USERNAME
        for (const [userId, userData] of userChats.entries()) {
            if (userData.username && userData.username.toLowerCase().includes(searchUsername)) {
                foundUsers.push({ userId, userData });
            }
        }

        if (foundUsers.length === 0) {
            return bot.sendMessage(msg.chat.id, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å username —Å–æ–¥–µ—Ä–∂–∞—â–∏–º "${searchUsername}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã`);
        }

        const message = foundUsers.slice(0, 10).map((user, index) => {
            return `${index + 1}. @${user.userData.username} (ID: ${user.userId})\n   –ò–º—è: ${user.userData.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n   –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(user.userData.joined_at).toLocaleDateString('ru-RU')}`;
        }).join('\n\n');

        const resultMessage = `üîç –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${foundUsers.length}\n\n${message}${
            foundUsers.length > 10 ? `\n\n... –∏ –µ—â–µ ${foundUsers.length - 10} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π` : ''
        }`;

        bot.sendMessage(msg.chat.id, resultMessage);

    } catch (error) {
        logger.error('Error in find user command:', error);
        bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

module.exports = {
    handleUserInfoCommand,
    handleFindUserCommand
};
