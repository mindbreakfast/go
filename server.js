const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const fs = require('fs').promises;
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø =====
const TOKEN = '8368808338:AAF25l680ekIKpzQyvDj9pKc2zByrJx9dII'; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô –¢–û–ö–ï–ù!
const WEB_APP_URL = 'https://gogo-kohl-beta.vercel.app'; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® URL

// ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID —á–µ—Ä–µ–∑ @userinfobot)
const ADMINS = [1777213824]; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï ID

const bot = new TelegramBot(TOKEN, { 
    polling: true,
    onlyFirstMatch: true,
    request: { timeout: 60000 }
});

// ===== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====
function isAdmin(userId) {
    return ADMINS.includes(Number(userId));
}

function logMessage(msg, command = '') {
    console.log(`[${new Date().toLocaleTimeString()}] ${msg.from.first_name} (${msg.from.id}): ${command || msg.text}`);
}

async function updateStreamStatus(isLive, streamUrl = '') {
    try {
        const statusData = {
            isStreamLive: isLive,
            streamUrl: streamUrl,
            lastUpdated: new Date().toISOString()
        };
        
        await fs.writeFile(
            path.join(__dirname, 'public', 'stream_status_default.json'),
            JSON.stringify(statusData, null, 2)
        );
        
        console.log('–°—Ç–∞—Ç—É—Å —Å—Ç—Ä–∏–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω:', statusData);
        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å—Ç—Ä–∏–º–∞:', error);
        return false;
    }
}

// ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î =====

// –ö–æ–º–∞–Ω–¥–∞ /start - –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.onText(/\/start/, (msg) => {
    logMessage(msg, '/start');
    
    const chatId = msg.chat.id;
    const keyboard = {
        reply_markup: {
            inline_keyboard: [[
                {
                    text: 'üé∞ –û–¢–ö–†–´–¢–¨ –°–ü–ò–°–û–ö –ö–ê–ó–ò–ù–û',
                    web_app: { url: WEB_APP_URL }
                }
            ]]
        }
    };
    
    const welcomeText = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! 

üéØ –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∫–∞–∑–∏–Ω–æ —Å —Ä–∞–±–æ—á–∏–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏.

üìã –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá`;

    bot.sendMessage(chatId, welcomeText, keyboard)
        .catch(error => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
});

// –ö–æ–º–∞–Ω–¥–∞ /help - –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
bot.onText(/\/help/, (msg) => {
    logMessage(msg, '/help');
    
    const helpText = `üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫
/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É

‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
/live [—Å—Å—ã–ª–∫–∞] - –ù–∞—á–∞—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é
/stop - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é
/add - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –∫–∞–∑–∏–Ω–æ`;

    bot.sendMessage(msg.chat.id, helpText);
});

// –ö–æ–º–∞–Ω–¥–∞ /live - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
bot.onText(/\/live (.+)/, async (msg, match) => {
    logMessage(msg, '/live');
    
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const streamUrl = match[1].trim();

    if (!isAdmin(userId)) {
        return bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!');
    }

    try {
        const success = await updateStreamStatus(true, streamUrl);
        
        if (success) {
            const responseText = `‚úÖ –°—Ç—Ä–∏–º –∑–∞–ø—É—â–µ–Ω!
            
–°—Å—ã–ª–∫–∞: ${streamUrl}

–ë–∞–Ω–Ω–µ—Ä –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ –∫–æ–º–∞–Ω–¥—ã /stop`;
            
            bot.sendMessage(chatId, responseText);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /live:', error);
        bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ /stop - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
bot.onText(/\/stop/, async (msg) => {
    logMessage(msg, '/stop');
    
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (!isAdmin(userId)) {
        return bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!');
    }

    try {
        const success = await updateStreamStatus(false);
        
        if (success) {
            bot.sendMessage(chatId, '‚úÖ –¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ë–∞–Ω–Ω–µ—Ä —Å–∫—Ä—ã—Ç.');
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stop:', error);
        bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é.');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ /add - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
bot.onText(/\/add/, (msg) => {
    logMessage(msg, '/add');
    
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (!isAdmin(userId)) {
        return bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!');
    }

    const instructions = `üìù –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–∑–∏–Ω–æ:

1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª data_default.json
2. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤ casinos
3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª

–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
{
  "id": 3,
  "name": "–ù–æ–≤–æ–µ –∫–∞–∑–∏–Ω–æ",
  "promocode": "PROMO123",
  "promoDescription": "–û–ø–∏—Å–∞–Ω–∏–µ –±–æ–Ω—É—Å–∞",
  "url": "https://casino.com",
  "showRegisteredButton": true,
  "hiddenKeywords": ["–∫–ª—é—á–µ–≤—ã–µ", "—Å–ª–æ–≤–∞"],
  "category": "crypto"
}

–í –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.`;

    bot.sendMessage(chatId, instructions);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    if (msg.text && !msg.text.startsWith('/')) {
        logMessage(msg);
        
        // –ü—Ä–æ—Å—Ç–æ–π echo –¥–ª—è —Ç–µ—Å—Ç–∞
        if (msg.text.toLowerCase() === '–ø—Ä–∏–≤–µ—Ç') {
            bot.sendMessage(msg.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥');
        }
    }
});

// ===== –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö =====
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

// ===== WEB-–°–ï–†VER =====
app.use(express.static('public'));

app.get('/', (req, res) => {
    res.send(`
        <html>
            <body>
                <h1>CasinoHub Bot Server</h1>
                <p>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Telegram –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.</p>
                <p>–¢–æ–∫–µ–Ω: ${TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                <p>–ê–¥–º–∏–Ω—ã: ${ADMINS.join(', ')}</p>
            </body>
        </html>
    `);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`
üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}
ü§ñ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Ç–æ–∫–µ–Ω–æ–º: ${TOKEN ? 'YES' : 'NO'}
üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: ${ADMINS.join(', ')}
üåê WebApp URL: ${WEB_APP_URL}
    `);
    
    if (!TOKEN || TOKEN.includes('–í–ê–®_–¢–û–ö–ï–ù')) {
        console.error('‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    }
    
    if (ADMINS.length === 0 || ADMINS[0] === 123456789) {
        console.error('‚ùå –û–®–ò–ë–ö–ê: ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
    }
});
